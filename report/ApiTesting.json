{
  "stats": {
    "suites": 11,
    "tests": 30,
    "passes": 30,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-11T22:39:52.992Z",
    "end": "2021-11-11T22:40:05.520Z",
    "duration": 12528,
    "testsRegistered": 30,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6c4c776c-d893-4339-9de7-b735c018a71d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3458e5d1-c1ad-4493-bb2f-eab95fb33db6",
          "title": "Github Api Test",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0b55d7f1-3ded-40b3-afc5-dc9182b75e7b",
              "title": "Authentication",
              "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 373,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await agent\n  .get(`${urlBase}/repos/${githubUserName}/${repository}`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.description).equal(\n  'This is a Workshop about Api Testing in JavaScript'\n);",
                  "err": {},
                  "uuid": "0a9f577b-932f-4bab-8c79-f9b2fa378b7c",
                  "parentUUID": "0b55d7f1-3ded-40b3-afc5-dc9182b75e7b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Via OAuth2 Tokens by parameter",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by parameter",
                  "timedOut": false,
                  "duration": 317,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent\n      .get(`${urlBase}/repos/${githubUserName}/${repository}`)\n      .auth('token', process.env.ACCESS_TOKEN)\n      .set('User-Agent', 'juanescendales')\n      .then((response) => {\n        expect(response.status).to.equal(statusCode.OK);\n        expect(response.body.description).equal(\n          'This is a Workshop about Api Testing in JavaScript'\n        );\n      })",
                  "err": {},
                  "uuid": "3bf46407-1e0a-43df-b126-2cb7120f223c",
                  "parentUUID": "0b55d7f1-3ded-40b3-afc5-dc9182b75e7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a9f577b-932f-4bab-8c79-f9b2fa378b7c",
                "3bf46407-1e0a-43df-b126-2cb7120f223c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 690,
              "root": false,
              "rootEmpty": false,
              "_timeout": 7000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "8bff43b6-d5dc-4042-b5e0-0689cbae9b8f",
          "title": "Given event Github API resources",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Contract.test.js",
          "file": "\\test\\GithubApi.Contract.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "182244dc-8fdd-4151-a6ed-4995ac12eda7",
              "title": "When wanna verify the List public events",
              "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Contract.test.js",
              "file": "\\test\\GithubApi.Contract.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"When wanna verify the List public events\"",
                  "fullTitle": "Given event Github API resources When wanna verify the List public events \"before all\" hook in \"When wanna verify the List public events\"",
                  "timedOut": false,
                  "duration": 547,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await agent\n  .get(`${urlBase}/events`)\n  .set('User-Agent', 'agent')\n  .auth('token', process.env.ACCESS_TOKEN);",
                  "err": {},
                  "uuid": "709eb397-5308-468c-9191-22d0e735ba9f",
                  "parentUUID": "182244dc-8fdd-4151-a6ed-4995ac12eda7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "then the body should have a schema",
                  "fullTitle": "Given event Github API resources When wanna verify the List public events then the body should have a schema",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(response).to.be.jsonSchema(listPublicEventsSchema)",
                  "err": {},
                  "uuid": "a01cf913-519c-4e5c-90ee-cf58bbb8958f",
                  "parentUUID": "182244dc-8fdd-4151-a6ed-4995ac12eda7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a01cf913-519c-4e5c-90ee-cf58bbb8958f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 7000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "6ef9704f-c817-407b-af6d-fe32a23e4328",
          "title": "Gist CRUD - DELETE",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
          "file": "\\test\\GithubApi.Gist.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create gist (POST) ",
              "fullTitle": "Gist CRUD - DELETE Create gist (POST) ",
              "timedOut": false,
              "duration": 699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .post(`${urlBase}/gists`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .send(gistBody)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.CREATED);\nexpect(response.body).containSubset(gistBody);\ngistUrl = response.body.url;",
              "err": {},
              "uuid": "b12935d3-7b41-4c6a-b6ed-ff336b9e7460",
              "parentUUID": "6ef9704f-c817-407b-af6d-fe32a23e4328",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify gist creation (GET)",
              "fullTitle": "Gist CRUD - DELETE Verify gist creation (GET)",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .get(gistUrl)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body).containSubset(gistBody);",
              "err": {},
              "uuid": "cd8dc26e-160f-403b-9ffa-7eebe611b5c6",
              "parentUUID": "6ef9704f-c817-407b-af6d-fe32a23e4328",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the gist (DELETE)",
              "fullTitle": "Gist CRUD - DELETE Delete the gist (DELETE)",
              "timedOut": false,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .delete(gistUrl)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.NO_CONTENT);",
              "err": {},
              "uuid": "3a42cb57-de1d-41a6-8621-ab5ef693758e",
              "parentUUID": "6ef9704f-c817-407b-af6d-fe32a23e4328",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify deletion (GET)",
              "fullTitle": "Gist CRUD - DELETE Verify deletion (GET)",
              "timedOut": false,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response;\ntry {\n  response = await agent\n    .get(gistUrl)\n    .auth('token', process.env.ACCESS_TOKEN)\n    .set('User-Agent', 'juanescendales');\n} catch (error) {\n  response = error;\n}\nexpect(response.status).to.equal(statusCode.NOT_FOUND);",
              "err": {},
              "uuid": "dfc1abcb-057d-431c-98a5-abc7a292d45b",
              "parentUUID": "6ef9704f-c817-407b-af6d-fe32a23e4328",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b12935d3-7b41-4c6a-b6ed-ff336b9e7460",
            "cd8dc26e-160f-403b-9ffa-7eebe611b5c6",
            "3a42cb57-de1d-41a6-8621-ab5ef693758e",
            "dfc1abcb-057d-431c-98a5-abc7a292d45b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1741,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "3c8d62bc-e7de-421a-a4e0-ab404ed2cc8d",
          "title": "Issue Creation - POST & PATCH",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
          "file": "\\test\\GithubApi.Issue.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logged User (POST) ",
              "fullTitle": "Issue Creation - POST & PATCH Logged User (POST) ",
              "timedOut": false,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.post(`${urlBase}/user`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.public_repos).to.greaterThan(0);\ngitHubUser = response.body.login;",
              "err": {},
              "uuid": "670b1acd-1194-4405-af34-d0a2e7bf1d3d",
              "parentUUID": "3c8d62bc-e7de-421a-a4e0-ab404ed2cc8d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Public repository from user (GET) ",
              "fullTitle": "Issue Creation - POST & PATCH Public repository from user (GET) ",
              "timedOut": false,
              "duration": 566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .get(`${urlBase}/users/${gitHubUser}/repos`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.StatusCodes.OK);\nrepositoryName = response.body\n  .find((element) => element.visibility === 'public').name;",
              "err": {},
              "uuid": "ef15f119-1808-40f7-8f94-e49b9a626b5a",
              "parentUUID": "3c8d62bc-e7de-421a-a4e0-ab404ed2cc8d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Issue (POST)",
              "fullTitle": "Issue Creation - POST & PATCH Create Issue (POST)",
              "timedOut": false,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .post(`${urlBase}/repos/${gitHubUser}/${repositoryName}/issues`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .send(issue)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.StatusCodes.CREATED);\nexpect(response.body.title).to.equal(issue.title);\nexpect(response.body.body).to.be.eql(null);\nissueNumber = response.body.number;",
              "err": {},
              "uuid": "df461a5e-3266-4ffb-ae38-193a85cc58b5",
              "parentUUID": "3c8d62bc-e7de-421a-a4e0-ab404ed2cc8d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Modify Issue (PATCH)",
              "fullTitle": "Issue Creation - POST & PATCH Modify Issue (PATCH)",
              "timedOut": false,
              "duration": 582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .patch(`${urlBase}/repos/${gitHubUser}/${repositoryName}/issues/${issueNumber}`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .send(updateInfo)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.StatusCodes.OK);\nexpect(response.body.title).to.equal(issue.title);\nexpect(response.body.body).to.equal(updateInfo.body);",
              "err": {},
              "uuid": "1f242866-efad-4b29-8c1e-45814f170818",
              "parentUUID": "3c8d62bc-e7de-421a-a4e0-ab404ed2cc8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "670b1acd-1194-4405-af34-d0a2e7bf1d3d",
            "ef15f119-1808-40f7-8f94-e49b9a626b5a",
            "df461a5e-3266-4ffb-ae38-193a85cc58b5",
            "1f242866-efad-4b29-8c1e-45814f170818"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2063,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "5d6219a1-d6f6-4ffc-b637-5d342d30a347",
          "title": "Following User in GitHub Test - PUT",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
          "file": "\\test\\GithubApi.Put.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Follow User (PUT) ",
              "fullTitle": "Following User in GitHub Test - PUT Follow User (PUT) ",
              "timedOut": false,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .put(`${urlBase}/user/following/${gitHubUser}`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales')\n  .send({\n    username: gitHubUser\n  });\nexpect(response.status).to.equal(statusCode.NO_CONTENT);\nexpect(response.body).to.eql({});",
              "err": {},
              "uuid": "8397fdb5-4e1f-48c6-9ad9-817961959da6",
              "parentUUID": "5d6219a1-d6f6-4ffc-b637-5d342d30a347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Following (GET)",
              "fullTitle": "Following User in GitHub Test - PUT Verify Following (GET)",
              "timedOut": false,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get('https://api.github.com/user/following')\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body).containSubset([{ login: 'aperdomob' }]);",
              "err": {},
              "uuid": "8f696745-de7d-4803-a2ab-6b885d5f9d40",
              "parentUUID": "5d6219a1-d6f6-4ffc-b637-5d342d30a347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Try to follow again - Idempotency  (PUT)",
              "fullTitle": "Following User in GitHub Test - PUT Try to follow again - Idempotency  (PUT)",
              "timedOut": false,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .put(`${urlBase}/user/following/${gitHubUser}`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales')\n  .send({\n    username: gitHubUser\n  });\nexpect(response.status).to.equal(statusCode.NO_CONTENT);\nexpect(response.body).to.eql({});",
              "err": {},
              "uuid": "c97d7cc4-665a-4727-9aa8-c58f41aa9c6d",
              "parentUUID": "5d6219a1-d6f6-4ffc-b637-5d342d30a347",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8397fdb5-4e1f-48c6-9ad9-817961959da6",
            "8f696745-de7d-4803-a2ab-6b885d5f9d40",
            "c97d7cc4-665a-4727-9aa8-c58f41aa9c6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 906,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "9c628c35-c8f5-4a11-bbbd-5dbf3cd32140",
          "title": "Redirect - HEAD",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Redirect.js",
          "file": "\\test\\GithubApi.Redirect.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Query repository but with old name (HEAD)",
              "fullTitle": "Redirect - HEAD Query repository but with old name (HEAD)",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response;\ntry {\n  response = await agent\n    .head('https://github.com/aperdomob/redirect-test')\n    .auth('token', process.env.ACCESS_TOKEN)\n    .set('User-Agent', 'juanescendales');\n} catch (error) {\n  response = error;\n}\nexpect(response.status).to.equal(statusCode.MOVED_PERMANENTLY);\nexpect(response.response.headers.location).to.equal('https://github.com/aperdomob/new-redirect-test');",
              "err": {},
              "uuid": "577e54ac-db24-4c2e-aba2-6019218c9af6",
              "parentUUID": "9c628c35-c8f5-4a11-bbbd-5dbf3cd32140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Query the real repository (GET)",
              "fullTitle": "Redirect - HEAD Query the real repository (GET)",
              "timedOut": false,
              "duration": 727,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response;\ntry {\n  response = await agent\n    .get('https://github.com/aperdomob/redirect-test')\n    .auth('token', process.env.ACCESS_TOKEN)\n    .set('User-Agent', 'juanescendales');\n} catch (error) {\n  response = error;\n}\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.redirects[0]).to.equal('https://github.com/aperdomob/new-redirect-test');",
              "err": {},
              "uuid": "34f206f4-4a36-4257-8cca-dbe7afd322bb",
              "parentUUID": "9c628c35-c8f5-4a11-bbbd-5dbf3cd32140",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "577e54ac-db24-4c2e-aba2-6019218c9af6",
            "34f206f4-4a36-4257-8cca-dbe7afd322bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1014,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "656ea3b4-770e-4332-9de2-5962c668fd14",
          "title": "Test Repositories - GET",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
          "file": "\\test\\GithubApi.Repositories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find User (GET)",
              "fullTitle": "Test Repositories - GET Find User (GET)",
              "timedOut": false,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get(`${urlBase}/users/${gitHubUser}`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.name).to.equal('Alejandro Perdomo');\nexpect(response.body.company).to.equal('Perficient Latam');\nexpect(response.body.location).to.equal('Colombia');\nreposotryURL = response.body.repos_url;",
              "err": {},
              "uuid": "8286eb35-171a-4e00-94d0-b3403ce0f904",
              "parentUUID": "656ea3b4-770e-4332-9de2-5962c668fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "List of repositories (GET)",
              "fullTitle": "Test Repositories - GET List of repositories (GET)",
              "timedOut": false,
              "duration": 665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get(reposotryURL)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nconst targetRepository = response.body.find((element) => element.name === repository);\nexpect(targetRepository.full_name).to.equal(`${gitHubUser}/${repository}`);\nexpect(targetRepository.private).to.equal(false);\nexpect(targetRepository.description).to.equal('An awesome html report for Jasmine');",
              "err": {},
              "uuid": "fbed45ac-fa11-476e-986c-214aee3091ac",
              "parentUUID": "656ea3b4-770e-4332-9de2-5962c668fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Repository download (GET)",
              "fullTitle": "Test Repositories - GET Repository download (GET)",
              "timedOut": false,
              "duration": 846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get(`${urlBase}/repos/${gitHubUser}/${repository}/zipball/master`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(MD5(response.body)).to.equal('df39e5cda0f48ae13a5c5fe432d2aefa');",
              "err": {},
              "uuid": "61df2f2e-3e6a-4679-9af6-5a468665b19f",
              "parentUUID": "656ea3b4-770e-4332-9de2-5962c668fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find repository README (GET)",
              "fullTitle": "Test Repositories - GET Find repository README (GET)",
              "timedOut": false,
              "duration": 313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get(`${urlBase}/repos/${gitHubUser}/${repository}/contents`)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body).containSubset([repositoryData]);\nrepositoryReadmeDownloadURL = response.body.find((element) => element.name === 'README.md').download_url;",
              "err": {},
              "uuid": "44e0f125-32d2-460b-8dd3-20656c7b7d9c",
              "parentUUID": "656ea3b4-770e-4332-9de2-5962c668fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download repository README (GET)",
              "fullTitle": "Test Repositories - GET Download repository README (GET)",
              "timedOut": false,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get(repositoryReadmeDownloadURL)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(MD5(response.text)).to.equal('97ee7616a991aa6535f24053957596b1');",
              "err": {},
              "uuid": "2571db68-cbde-486b-94b9-54c4ccb85c5d",
              "parentUUID": "656ea3b4-770e-4332-9de2-5962c668fd14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8286eb35-171a-4e00-94d0-b3403ce0f904",
            "fbed45ac-fa11-476e-986c-214aee3091ac",
            "61df2f2e-3e6a-4679-9af6-5a468665b19f",
            "44e0f125-32d2-460b-8dd3-20656c7b7d9c",
            "2571db68-cbde-486b-94b9-54c4ccb85c5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "ecbe57a0-a536-47f6-8bc6-033586413c6e",
          "title": "Query Parameters - GET",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\GithubApi.Users.test.js",
          "file": "\\test\\GithubApi.Users.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Query default number of users (GET)",
              "fullTitle": "Query Parameters - GET Query default number of users (GET)",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .get(url)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.length).equal(30);",
              "err": {},
              "uuid": "ccfe153a-7d78-4d46-8c5c-1a5c9d411ee8",
              "parentUUID": "ecbe57a0-a536-47f6-8bc6-033586413c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Query 10 users (GET)",
              "fullTitle": "Query Parameters - GET Query 10 users (GET)",
              "timedOut": false,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .get(url)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .query({ per_page: 10 })\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.length).equal(10);",
              "err": {},
              "uuid": "ae1995ab-d158-4ac5-a8c8-c4ee394aa09b",
              "parentUUID": "ecbe57a0-a536-47f6-8bc6-033586413c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Query 10 users (GET)",
              "fullTitle": "Query Parameters - GET Query 10 users (GET)",
              "timedOut": false,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent\n  .get(url)\n  .auth('token', process.env.ACCESS_TOKEN)\n  .query({ per_page: 50 })\n  .set('User-Agent', 'juanescendales');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.length).equal(50);",
              "err": {},
              "uuid": "2d3aaef7-f893-4e7d-86b5-5c8216ea63e0",
              "parentUUID": "ecbe57a0-a536-47f6-8bc6-033586413c6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccfe153a-7d78-4d46-8c5c-1a5c9d411ee8",
            "ae1995ab-d158-4ac5-a8c8-c4ee394aa09b",
            "2d3aaef7-f893-4e7d-86b5-5c8216ea63e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1248,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        },
        {
          "uuid": "619227fa-e3d1-480c-9636-e42c0bab8e23",
          "title": "First Api Tests",
          "fullFile": "D:\\Juanes\\Universidad\\Semestre 9\\Praxis\\Modulo03\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body).to.have.property('origin');",
              "err": {},
              "uuid": "8297bf6a-ab49-436a-871c-e3243ad92b62",
              "parentUUID": "619227fa-e3d1-480c-9636-e42c0bab8e23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await agent.get('https://httpbin.org/get').query(query);\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.args).to.eql(query);",
              "err": {},
              "uuid": "72c1a059-2f4d-4527-a640-d08caf5f2a36",
              "parentUUID": "619227fa-e3d1-480c-9636-e42c0bab8e23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume HEAD Service",
              "fullTitle": "First Api Tests Consume HEAD Service",
              "timedOut": false,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.head('https://httpbin.org/get');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.header['content-type']).to.eql('application/json');",
              "err": {},
              "uuid": "8806143a-6538-4ce4-bd84-0ab30ca10201",
              "parentUUID": "619227fa-e3d1-480c-9636-e42c0bab8e23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service",
              "fullTitle": "First Api Tests Consume PATCH Service",
              "timedOut": false,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await agent.patch('https://httpbin.org/patch').query(query);\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.args).to.eql(query);",
              "err": {},
              "uuid": "ab12235b-d4e1-4e8c-a506-8b5e5279c3ee",
              "parentUUID": "619227fa-e3d1-480c-9636-e42c0bab8e23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service",
              "fullTitle": "First Api Tests Consume PUT Service",
              "timedOut": false,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.put('https://httpbin.org/anything');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.method).to.eql('PUT');",
              "err": {},
              "uuid": "875e53b0-5b56-463d-9b71-fde5893ec7b9",
              "parentUUID": "619227fa-e3d1-480c-9636-e42c0bab8e23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service",
              "fullTitle": "First Api Tests Consume DELETE Service",
              "timedOut": false,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await agent.delete('https://httpbin.org/anything');\nexpect(response.status).to.equal(statusCode.OK);\nexpect(response.body.method).to.eql('DELETE');",
              "err": {},
              "uuid": "b6fdd6fc-4f64-46d7-98ee-447dd7d92b27",
              "parentUUID": "619227fa-e3d1-480c-9636-e42c0bab8e23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8297bf6a-ab49-436a-871c-e3243ad92b62",
            "72c1a059-2f4d-4527-a640-d08caf5f2a36",
            "8806143a-6538-4ce4-bd84-0ab30ca10201",
            "ab12235b-d4e1-4e8c-a506-8b5e5279c3ee",
            "875e53b0-5b56-463d-9b71-fde5893ec7b9",
            "b6fdd6fc-4f64-46d7-98ee-447dd7d92b27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 7000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 7000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "6.0.1"
    }
  }
}